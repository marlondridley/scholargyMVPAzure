name: Build and deploy Node.js app to Azure Web App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      # Install root dependencies (if any)
      - name: Install root dependencies
        run: npm install

      # Build frontend
      - name: Build frontend
        env:
          CI: false
        run: |
          cd frontend
          npm install
          npm run build
          cd ..

      # Verify frontend build
      - name: Verify frontend build
        run: |
          echo "üìÅ Frontend build contents:"
          ls -la frontend/build/
          echo "üìÅ Checking for index.html:"
          if [ -f "frontend/build/index.html" ]; then
            echo "‚úÖ index.html found"
          else
            echo "‚ùå index.html not found"
            exit 1
          fi

      # Install backend dependencies
      - name: Install backend dependencies
        run: |
          cd backend
          npm install
          cd ..

      # Package application for Azure deployment
      - name: Package application for Azure
        run: |
          rm -rf deploy
          mkdir -p deploy/public
          
          # Copy backend source files
          cp -r backend/* deploy/
          rm -f deploy/package.json deploy/package-lock.json  # Remove backend package files
          
          # Copy frontend build into public folder
          cp -r frontend/build/* deploy/public/
          
          # Copy root-level config files (with all dependencies)
          cp package*.json deploy/
          cp startup.js deploy/
          
          # Copy additional directories if they exist
          cp -r public deploy/public-extra || true
          cp -r services deploy/services || true
          cp -r utils deploy/utils || true
          cp -r routes deploy/routes || true

          echo "Deployment package contents:"
          ls -la deploy/
          echo "üìÅ Root package.json (with all dependencies):"
          cat deploy/package.json | grep -A 10 '"dependencies"'
          echo "üìÅ Verifying express is in dependencies:"
          grep -i express deploy/package.json
          echo "üìÅ Public directory (frontend build):"
          ls -la deploy/public/
          echo "üìÅ Verifying startup.js exists:"
          if [ -f "deploy/startup.js" ]; then
            echo "‚úÖ startup.js found"
          else
            echo "‚ùå startup.js not found"
            exit 1
          fi
          echo "üìÅ Verifying server.js exists:"
          if [ -f "deploy/server.js" ]; then
            echo "‚úÖ server.js found"
          else
            echo "‚ùå server.js not found"
            exit 1
          fi
          echo "üìÅ Verifying package.json start script:"
          grep -A 1 '"start"' deploy/package.json

      # Deploy to Azure Web App
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'scholargy-dz3lcl3szkm74'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ./deploy
        
      # Wait for deployment and check health
      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting for deployment to complete..."
          sleep 30
        
      - name: Check application health
        run: |
          echo "üè• Checking application health..."
          # Wait for the application to be ready
          for i in {1..10}; do
            echo "Attempt $i: Checking health endpoint..."
            if curl -f -s "https://scholargy-dz3lcl3szkm74.azurewebsites.net/api/health" > /dev/null; then
              echo "‚úÖ Application is healthy!"
              break
            elif curl -f -s "https://scholargy-dz3lcl3szkm74.azurewebsites.net/api/startup" > /dev/null; then
              echo "‚úÖ Application startup probe successful!"
              break
            else
              echo "‚è≥ Application not ready yet, waiting..."
              sleep 10
            fi
          done