name: Build and Deploy to Azure App Service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: '18.17.0'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          echo "üì¶ Installing root dependencies..."
          npm ci
          
      - name: Build frontend
        run: |
          echo "üî® Building frontend..."
          cd frontend
          npm ci
          npm run build
          cd ..
          
      - name: Copy frontend build to public directory
        run: |
          echo "üìÅ Copying frontend build to public directory..."
          mkdir -p public
          cp -r frontend/build/* public/
          
      - name: Run tests
        run: |
          echo "üß™ Running tests..."
          npm test
          
      - name: Create deployment package
        run: |
          echo "üì¶ Creating deployment package..."
          mkdir -p deploy
          
          # Copy all backend files
          cp -r routes deploy/
          cp -r services deploy/
          cp -r middleware deploy/
          cp -r utils deploy/
          cp -r __tests__ deploy/
          cp server.js deploy/
          cp package*.json deploy/
          cp .deployment deploy/
          cp web.config deploy/
          cp ecosystem.config.js deploy/
          
          # Copy frontend build
          cp -r public deploy/
          
          # Copy other necessary files
          cp .gitignore deploy/
          
          echo "üìã Deployment package contents:"
          ls -la deploy/
          echo "üìÅ Public directory contents:"
          ls -la deploy/public/
          
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'scholargy-dz3lcl3szkm74'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ./deploy
          
      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting for deployment to complete..."
          sleep 30
          
      - name: Check application health
        run: |
          echo "üè• Checking application health..."
          # Wait for the application to be ready
          for i in {1..10}; do
            echo "Attempt $i: Checking health endpoint..."
            if curl -f -s "https://scholargy-dz3lcl3szkm74.azurewebsites.net/health" > /dev/null; then
              echo "‚úÖ Application is healthy!"
              break
            else
              echo "‚è≥ Application not ready yet, waiting..."
              sleep 10
            fi
          done
